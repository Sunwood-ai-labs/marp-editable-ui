name: Build and Publish Docker Images

on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - service: client
            context: .           # 変更: ルートディレクトリを指定
            dockerfile: client/Dockerfile  # 変更: 正しいDockerfileパス
            target: production
          - service: server
            context: .
            dockerfile: server/Dockerfile
            target: ""
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Set image names
        run: |
          BASE_NAME="${{ github.repository }}"
          echo "IMAGE_NAME=${BASE_NAME,,}" >>${GITHUB_ENV}
          echo "FULL_IMAGE_NAME=ghcr.io/${BASE_NAME,,}-${{ matrix.service }}" >>${GITHUB_ENV}

      - name: Prepare platform info
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.FULL_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=git-
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}

      - name: Build and push by digest
        uses: docker/build-push-action@v5
        id: build
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}  # 変更: file パスを修正
          target: ${{ matrix.target }}
          push: true
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.FULL_IMAGE_NAME }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=registry,ref=${{ env.FULL_IMAGE_NAME }}:buildcache-${{ env.PLATFORM_PAIR }}
          cache-to: type=registry,ref=${{ env.FULL_IMAGE_NAME }}:buildcache-${{ env.PLATFORM_PAIR }},mode=max
          build-args: |
            BUILD_HASH=${{ github.sha }}
            NODE_ENV=production

      - name: Export digest
        run: |
          mkdir -p /tmp/digests/${{ matrix.service }}
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${{ matrix.service }}/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.service }}-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/${{ matrix.service }}/*
          if-no-files-found: error
          retention-days: 1

  merge-images:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - client
          - server
    steps:
      - name: Set image names
        run: |
          BASE_NAME="${{ github.repository }}"
          echo "IMAGE_NAME=${BASE_NAME,,}" >>${GITHUB_ENV}
          echo "FULL_IMAGE_NAME=ghcr.io/${BASE_NAME,,}-${{ matrix.service }}" >>${GITHUB_ENV}

      - name: Create digests directory
        run: |
          mkdir -p /tmp/digests
          cd /tmp/digests
          pwd
          ls -la

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: digests-${{ matrix.service }}-*
          path: /tmp/digests
          merge-multiple: true

      - name: List downloaded files
        run: |
          cd /tmp/digests
          pwd
          ls -la

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.FULL_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=git-
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}

      - name: Create and push manifest list
        run: |
          cd /tmp/digests
          echo "Current directory contents:"
          ls -la
          
          digests=""
          for digest in *; do
            if [ -f "$digest" ]; then
              digests="${digests} ${{ env.FULL_IMAGE_NAME }}@sha256:${digest}"
            fi
          done
          
          tags=$(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON")
          
          echo "Creating manifest list with tags: $tags"
          echo "And digests: $digests"
          
          if [ -n "$digests" ]; then
            docker buildx imagetools create ${tags} ${digests}
          else
            echo "Error: No digest files found"
            exit 1
          fi

      - name: Inspect image
        if: success()
        run: |
          docker buildx imagetools inspect ${{ env.FULL_IMAGE_NAME }}:${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
